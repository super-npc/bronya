name: 打入maven私有仓库

#on:
#  repository_dispatch:
#    types: [deploy]

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  # 当前项目名称
  project_name: bronya #${GITHUB_REPOSITORY#*/}
  # 格式化的push请求则不执行
  format_message: alibaba/p3c格式化
  build_modules: bronya-starter/bronya-starter-base,bronya-starter/bronya-starter-db,bronya-admin/bronya-admin-media,bronya-admin/bronya-admin-miniapp,bronya-admin/bronya-admin-openfeign,bronya-admin/bronya-admin-scheduled
  build_modules_rabbit: bronya-admin/bronya-admin-rabbit/bronya-admin-rabbit-core,bronya-admin/bronya-admin-rabbit/bronya-admin-rabbit-rpc,bronya-admin/bronya-admin-rabbit/bronya-admin-rabbit-mqtt/bronya-admin-rabbit-mqtt-client,bronya-admin/bronya-admin-rabbit/bronya-admin-rabbit-mqtt/bronya-admin-rabbit-mqtt-core,bronya-admin/bronya-admin-rabbit/bronya-admin-rabbit-mqtt/bronya-admin-rabbit-mqtt-server
  build_modules_ws: bronya-admin/bronya-admin-ws/bronya-admin-ws-client,bronya-admin/bronya-admin-ws/bronya-admin-ws-server

jobs:
  build-code:
    name: 编译代码
    runs-on: ubuntu-latest
    steps:
      - name: 拼接 build_modules_all
        id: build_modules_all
        run: |
          echo "modules=${{ env.build_modules }},${{ env.build_modules_rabbit }},${{ env.build_modules_ws }}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - name: 获取提交信息
        id: commits
        run: |
          COMMIT_MESSAGE=$(git log --format="%cn: %cd - %s" --date=format:'%Y-%m-%d %H:%M')
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"

      - name: 发送飞书
        uses: wangsijie/feishu-bot@v1
        if: "!endsWith( steps.commits.outputs.commit_message, env.format_message )"
        with:
          uuid: 8d5211f5-d205-49aa-951e-4518be3ecf24
          text: |
            github 更新内容
            ${{ steps.commits.outputs.commit_message }}
            仓库: ${{ github.repository }}
            作者: ${{ github.actor }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      #      - name: setting.xml
      #        run: |
      #          cp -rf /home/runner/work/${{ env.project_name }}/${{ env.project_name }}/settings.xml /home/runner/.m2/settings.xml

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      #https://www.cnblogs.com/EasonJim/p/6865150.html 如何快速的知道Maven插件的命令行输入参数
      #https://raw.githubusercontent.com/alibaba/p3c/master/p3c-formatter/eclipse-codestyle.xml
      #          mvn -N versions:update-child-modules
      #      - name: 统一版本/格式化代码
      #        if: "!endsWith( steps.commits.outputs.commit_message, env.format_message )"
      #        run: |
      #          mvn -f /home/runner/work/${{ env.project_name }}/${{ env.project_name }}/pom.xml install net.revelc.code.formatter:formatter-maven-plugin:2.19.0:format -Dconfigfile=/home/runner/work/${{ env.project_name }}/${{ env.project_name }}/eclipse-codestyle.xml -Dproject.build.sourceEncoding=UTF-8 -DskipTests -Dmaven.test.skip=true
      #
      #      - name: Set up Git user
      #        if: "!endsWith( steps.commits.outputs.commit_message, env.format_message )"
      #        run: |
      #          git config --global credential.helper store
      #          git config --global user.name "github_actions"
      #          git config --global user.email "lianlianyi@vip.qq.com"
      #
      #      - name: 提交变更代码
      #        if: "!endsWith( steps.commits.outputs.commit_message, env.format_message )"
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      #        run: |
      #          if [[ -n $(git status -s) ]]; then
      #            echo "有未提交的更改,发送飞书,并重新编译"
      #            git add . --all
      #            git commit -m "${{ env.format_message }}" -a
      #            git push https://${{ secrets.GIT_TOKEN }}@github.com/super-npc/${{ env.project_name }}.git
      #            echo "取消当前流水线,重新push代码编译"
      #            exit 1
      #          else
      #            echo "没有未提交的更改"
      #          fi



      - name: 发布maven仓库
        run: |
          mvn -f /home/runner/work/${{ env.project_name }}/${{ env.project_name }}/pom.xml install -pl ${{ steps.build_modules_all.outputs.modules }} -am org.apache.maven.plugins:maven-deploy-plugin:2.8:deploy -DskipTests -s /home/runner/work/${{ env.project_name }}/${{ env.project_name }}/settings.xml

      # -----提交到github私有仓库----为了仓库不提交到阿里云覆盖setting.xml
      - name: github repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          repository: super-npc/mvn-repo
          path: mvn-repo

      - name: Set up Git user
        run: |
          git config --global credential.helper store
          git config --global user.name "github_actions"
          git config --global user.email "lianlianyi@vip.qq.com"

      - name: 发布github私有仓库
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          mvn -f /home/runner/work/${{ env.project_name }}/${{ env.project_name }}/pom.xml install -pl ${{ steps.build_modules_all.outputs.modules }} -am org.apache.maven.plugins:maven-deploy-plugin:2.8:deploy -DskipTests -DaltDeploymentRepository=internal.repo::default::file:/home/runner/work/bronya/bronya/mvn-repo -s /home/runner/work/${{ env.project_name }}/${{ env.project_name }}/settings-github.xml
          cd ./mvn-repo
          echo "准备提交代码到github私有仓库"
          git add . --all
          git commit -m "更新maven" -a
          git push https://${{ secrets.GIT_TOKEN }}@github.com/super-npc/mvn-repo.git
          echo "更新github 私有仓库完成"